{"ast":null,"code":"var _jsxFileName = \"/Users/Grzegorz/Documents/KURS/Projekty/React/weather-app/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useWeatherContext } from \"../../context/WeatherContextProvider\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoiZ3JlZzg4cGwiLCJhIjoiY2t5NmEzY2l4MHR3MzJwb2pyZTFmdjFwcSJ9.TfLfzZj270_0ZbXFeoMpLA\";\nexport const Map = () => {\n  _s();\n\n  const {\n    weather\n  } = useWeatherContext();\n  const mapContainer = useRef(null);\n  const map = useRef(null); //   const [lng, setLng] = useState(21.01);\n  //   const [lat, setLat] = useState(52.23);\n  //   const [zoom, setZoom] = useState(11);\n\n  useEffect(() => {\n    // if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [weather.coord.lon, weather.coord.lat],\n      zoom: 11\n    });\n  }, [weather.coord.lat, weather.coord.lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => map.flyTo({\n        center: [10, 10]\n      }),\n      children: \"lec\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n      /*css={mapContainer}*/\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}; // const mapContainer = css`\n//   height: 100vh;\n// `;\n\n_s(Map, \"tbQgKGEvCKvGOcM5DcUyhNbSeXc=\", false, function () {\n  return [useWeatherContext];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/Grzegorz/Documents/KURS/Projekty/React/weather-app/src/components/Map/Map.jsx"],"names":["React","useRef","useEffect","useState","useWeatherContext","mapboxgl","accessToken","Map","weather","mapContainer","map","current","container","style","center","coord","lon","lat","zoom","flyTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;;AAEnCA,QAAQ,CAACC,WAAT,GACE,4FADF;AAGA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,iBAAiB,EAArC;AACA,QAAMK,YAAY,GAAGR,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMS,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB,CAHuB,CAIvB;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,GAAG,CAACC,OAAJ,GAAc,IAAIN,QAAQ,CAACE,GAAb,CAAiB;AAC7BK,MAAAA,SAAS,EAAEH,YAAY,CAACE,OADK;AAE7BE,MAAAA,KAAK,EAAE,oCAFsB;AAG7BC,MAAAA,MAAM,EAAE,CAACN,OAAO,CAACO,KAAR,CAAcC,GAAf,EAAoBR,OAAO,CAACO,KAAR,CAAcE,GAAlC,CAHqB;AAI7BC,MAAAA,IAAI,EAAE;AAJuB,KAAjB,CAAd;AAMD,GARQ,EAQN,CAACV,OAAO,CAACO,KAAR,CAAcE,GAAf,EAAoBT,OAAO,CAACO,KAAR,CAAcC,GAAlC,CARM,CAAT;AAUA,sBACE;AAAA,4BAGE;AACE,MAAA,OAAO,EAAE,MACPN,GAAG,CAACS,KAAJ,CAAU;AACRL,QAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL;AADA,OAAV,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAYE;AACE,MAAA,GAAG,EAAEL,YADP;AAEE,MAAA,SAAS,EAAC;AAAgB;;AAF5B;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCM,C,CAuCP;AACA;AACA;;GAzCaF,G;UACSH,iB;;;KADTG,G","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useWeatherContext } from \"../../context/WeatherContextProvider\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZ3JlZzg4cGwiLCJhIjoiY2t5NmEzY2l4MHR3MzJwb2pyZTFmdjFwcSJ9.TfLfzZj270_0ZbXFeoMpLA\";\n\nexport const Map = () => {\n  const { weather } = useWeatherContext();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  //   const [lng, setLng] = useState(21.01);\n  //   const [lat, setLat] = useState(52.23);\n  //   const [zoom, setZoom] = useState(11);\n\n  useEffect(() => {\n    // if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [weather.coord.lon, weather.coord.lat],\n      zoom: 11,\n    });\n  }, [weather.coord.lat, weather.coord.lon]);\n\n  return (\n    <div>\n      {/* <div>Lon: {weather.coord.lon}</div>\n      <div>Lat: {weather.coord.lat}</div> */}\n      <button\n        onClick={() =>\n          map.flyTo({\n            center: [10, 10],\n          })\n        }\n      >\n        lec\n      </button>\n      <div\n        ref={mapContainer}\n        className=\"map-container\" /*css={mapContainer}*/\n      />\n    </div>\n  );\n};\n\n// const mapContainer = css`\n//   height: 100vh;\n// `;\n"]},"metadata":{},"sourceType":"module"}