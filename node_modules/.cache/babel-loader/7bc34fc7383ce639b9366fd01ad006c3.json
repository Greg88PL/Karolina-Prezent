{"ast":null,"code":"var _jsxFileName = \"/Users/Grzegorz/Documents/KURS/Projekty/React/weather-app/src/components/Weather/Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useWeatherContext } from \"../../context/WeatherContextProvider\";\nimport { Form } from \"./components/Form/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Weather = () => {\n  _s();\n\n  const {\n    weather\n  } = useWeatherContext();\n\n  const convertTime = (unixTime, offset) => {\n    let dt = new Date((unixTime + offset) * 1000);\n    let h = dt.getHours() - 1;\n    let m = \"0\" + dt.getMinutes();\n    let t = h + \":\" + m.substr(-2);\n    return t;\n  };\n\n  let sunRise = convertTime(weather.sys.sunrise, weather.timezone);\n  let sunSet = convertTime(weather.sys.sunset, weather.timezone);\n  const iconId = weather.weather[0].icon;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-info\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Miasto: \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Temperatura: \", weather.main.temp.toFixed(1), \" \\xB0C \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Wilgotno\\u015B\\u0107: \", weather.main.humidity, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Ci\\u015Bnienie: \", weather.main.pressure, \" hPa\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Wsch\\xF3d s\\u0142o\\u0144ca: \", sunRise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Zach\\xF3d s\\u0142o\\u0144ca: \", sunSet]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Opis: \", weather.weather[0].main]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Opis szczeg\\xF3\\u0142owy: \", weather.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://openweathermap.org/img/w/${iconId}.png`,\n      alt: weather.weather[0].description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Lon: \", weather.coord.lon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Lat: \", weather.coord.lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Weather, \"QXOgt7kVhIzudQMBFQDObaPK0HQ=\", false, function () {\n  return [useWeatherContext];\n});\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/Grzegorz/Documents/KURS/Projekty/React/weather-app/src/components/Weather/Weather.jsx"],"names":["React","useWeatherContext","Form","Weather","weather","convertTime","unixTime","offset","dt","Date","h","getHours","m","getMinutes","t","substr","sunRise","sys","sunrise","timezone","sunSet","sunset","iconId","icon","name","main","temp","toFixed","humidity","pressure","description","coord","lon","lat"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,IAAT,QAAqB,wBAArB;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAcH,iBAAiB,EAArC;;AAEA,QAAMI,WAAW,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACxC,QAAIC,EAAE,GAAG,IAAIC,IAAJ,CAAS,CAACH,QAAQ,GAAGC,MAAZ,IAAsB,IAA/B,CAAT;AACA,QAAIG,CAAC,GAAGF,EAAE,CAACG,QAAH,KAAgB,CAAxB;AACA,QAAIC,CAAC,GAAG,MAAMJ,EAAE,CAACK,UAAH,EAAd;AACA,QAAIC,CAAC,GAAGJ,CAAC,GAAG,GAAJ,GAAUE,CAAC,CAACG,MAAF,CAAS,CAAC,CAAV,CAAlB;AACA,WAAOD,CAAP;AACD,GAND;;AAQA,MAAIE,OAAO,GAAGX,WAAW,CAACD,OAAO,CAACa,GAAR,CAAYC,OAAb,EAAsBd,OAAO,CAACe,QAA9B,CAAzB;AACA,MAAIC,MAAM,GAAGf,WAAW,CAACD,OAAO,CAACa,GAAR,CAAYI,MAAb,EAAqBjB,OAAO,CAACe,QAA7B,CAAxB;AAEA,QAAMG,MAAM,GAAGlB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBmB,IAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAcnB,OAAO,CAACoB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,kCAAmBpB,OAAO,CAACqB,IAAR,CAAaC,IAAb,CAAkBC,OAAlB,CAA0B,CAA1B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,2CAAkBvB,OAAO,CAACqB,IAAR,CAAaG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,qCAAiBxB,OAAO,CAACqB,IAAR,CAAaI,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,kDAAsBb,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,kDAAsBI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,2BAAYhB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBqB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,+CAAwBrB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmB0B,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AACE,MAAA,GAAG,EAAG,mCAAkCR,MAAO,MADjD;AAEE,MAAA,GAAG,EAAElB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmB0B;AAF1B;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAA,0BAAW1B,OAAO,CAAC2B,KAAR,CAAcC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAA,0BAAW5B,OAAO,CAAC2B,KAAR,CAAcE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAnCM;;GAAM9B,O;UACSF,iB;;;KADTE,O","sourcesContent":["import React from \"react\";\nimport { useWeatherContext } from \"../../context/WeatherContextProvider\";\nimport { Form } from \"./components/Form/Form\";\n\nexport const Weather = () => {\n  const { weather } = useWeatherContext();\n\n  const convertTime = (unixTime, offset) => {\n    let dt = new Date((unixTime + offset) * 1000);\n    let h = dt.getHours() - 1;\n    let m = \"0\" + dt.getMinutes();\n    let t = h + \":\" + m.substr(-2);\n    return t;\n  };\n\n  let sunRise = convertTime(weather.sys.sunrise, weather.timezone);\n  let sunSet = convertTime(weather.sys.sunset, weather.timezone);\n\n  const iconId = weather.weather[0].icon;\n\n  return (\n    <div className=\"weather-info\">\n      <Form />\n      <div>Miasto: {weather.name}</div>\n      <div>Temperatura: {weather.main.temp.toFixed(1)} &deg;C </div>\n      <div>Wilgotność: {weather.main.humidity} %</div>\n      <div>Ciśnienie: {weather.main.pressure} hPa</div>\n      <div> Wschód słońca: {sunRise}</div>\n      <div> Zachód słońca: {sunSet}</div>\n      <div>Opis: {weather.weather[0].main}</div>\n      <div>Opis szczegółowy: {weather.weather[0].description}</div>\n      <img\n        src={`http://openweathermap.org/img/w/${iconId}.png`}\n        alt={weather.weather[0].description}\n      />\n      <div>Lon: {weather.coord.lon}</div>\n      <div>Lat: {weather.coord.lat}</div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}