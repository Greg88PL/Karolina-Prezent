{"ast":null,"code":"var _jsxFileName = \"/Users/Grzegorz/Documents/KURS/Projekty/React/karolina-prezent/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useWeatherContext } from \"../../context/WeatherContextProvider\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoiZ3JlZzg4cGwiLCJhIjoiY2t5NmEzY2l4MHR3MzJwb2pyZTFmdjFwcSJ9.TfLfzZj270_0ZbXFeoMpLA\";\nexport const Map = () => {\n  _s();\n\n  const {\n    weather\n  } = useWeatherContext();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [zoom, setZoom] = useState(11); //   const [lng, setLng] = useState(21.01);\n  //   const [lat, setLat] = useState(52.23);\n  //   const [zoom, setZoom] = useState(11);\n  // const cityCoordinates = [\n  //   [100.507, 13.745],\n  //   [98.993, 18.793],\n  //   [99.838, 19.924],\n  //   [102.812, 17.408],\n  //   [100.458, 7.001],\n  //   [100.905, 12.935],\n  // ];\n\n  useEffect(() => {\n    // if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-streets-v11\",\n      center: [weather.coord.lon, weather.coord.lat],\n      zoom: 11\n    });\n    console.log(map);\n  }, [weather.coord.lat, weather.coord.lon]); // useEffect(() => {\n  //   if (!map.current) return;\n  //   map.current.on(\"load\", () => {\n  //     for (const [index, coordinate] of cityCoordinates.entries()) {\n  //       setTimeout(() => {\n  //         map.current.jumpTo({ center: coordinate });\n  //       }, 2000 * index);\n  //     }\n  //   });\n  // });\n  // useEffect(() => {\n  //   if (!map.current) return;\n  //   map.current.flyTo({ center: [-3.88, 36.75], zoom: 14 });\n  // });\n\n  const [showElement, setShowElement] = useState(true);\n  useEffect(() => {\n    setTimeout(function () {\n      setShowElement(false);\n    }, 10000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: [showElement ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => map.current.flyTo({\n        center: [19.631, 52.865],\n        zoom: 16,\n        speed: 0.2,\n        curve: 1 // essential: true,\n\n      }),\n      children: \"Zobacz gdzie jedziemy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n      /*css={mapContainer}*/\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}; // const mapContainer = css`\n//   height: 100vh;\n// `;\n\n_s(Map, \"Lsd7rv8CTN8Fuwyfds1v1sxr+lo=\", false, function () {\n  return [useWeatherContext];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/Grzegorz/Documents/KURS/Projekty/React/karolina-prezent/src/components/Map/Map.jsx"],"names":["React","useRef","useEffect","useState","useWeatherContext","mapboxgl","accessToken","Map","weather","mapContainer","map","zoom","setZoom","current","container","style","center","coord","lon","lat","console","log","showElement","setShowElement","setTimeout","flyTo","speed","curve"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;;;AAEnCA,QAAQ,CAACC,WAAT,GACE,4FADF;AAGA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,iBAAiB,EAArC;AACA,QAAMK,YAAY,GAAGR,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMS,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAJuB,CAMvB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,GAAG,CAACG,OAAJ,GAAc,IAAIR,QAAQ,CAACE,GAAb,CAAiB;AAC7BO,MAAAA,SAAS,EAAEL,YAAY,CAACI,OADK;AAE7BE,MAAAA,KAAK,EAAE,8CAFsB;AAG7BC,MAAAA,MAAM,EAAE,CAACR,OAAO,CAACS,KAAR,CAAcC,GAAf,EAAoBV,OAAO,CAACS,KAAR,CAAcE,GAAlC,CAHqB;AAI7BR,MAAAA,IAAI,EAAE;AAJuB,KAAjB,CAAd;AAOAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACD,GAVQ,EAUN,CAACF,OAAO,CAACS,KAAR,CAAcE,GAAf,EAAoBX,OAAO,CAACS,KAAR,CAAcC,GAAlC,CAVM,CAAT,CAnBuB,CA+BvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,IAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,UAAU,CAAC,YAAY;AACrBD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFS,EAEP,KAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACGD,WAAW,gBACV;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,OAAO,EAAE,MACPZ,GAAG,CAACG,OAAJ,CAAYY,KAAZ,CAAkB;AAChBT,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CADQ;AAEhBL,QAAAA,IAAI,EAAE,EAFU;AAGhBe,QAAAA,KAAK,EAAE,GAHS;AAIhBC,QAAAA,KAAK,EAAE,CAJS,CAKhB;;AALgB,OAAlB,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAgBV,qCAjBJ,eAwBE;AACE,MAAA,GAAG,EAAElB,YADP;AAEE,MAAA,SAAS,EAAC;AAAgB;;AAF5B;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CArFM,C,CAuFP;AACA;AACA;;GAzFaF,G;UACSH,iB;;;KADTG,G","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { useWeatherContext } from \"../../context/WeatherContextProvider\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZ3JlZzg4cGwiLCJhIjoiY2t5NmEzY2l4MHR3MzJwb2pyZTFmdjFwcSJ9.TfLfzZj270_0ZbXFeoMpLA\";\n\nexport const Map = () => {\n  const { weather } = useWeatherContext();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [zoom, setZoom] = useState(11);\n\n  //   const [lng, setLng] = useState(21.01);\n  //   const [lat, setLat] = useState(52.23);\n  //   const [zoom, setZoom] = useState(11);\n\n  // const cityCoordinates = [\n  //   [100.507, 13.745],\n  //   [98.993, 18.793],\n  //   [99.838, 19.924],\n  //   [102.812, 17.408],\n  //   [100.458, 7.001],\n  //   [100.905, 12.935],\n  // ];\n\n  useEffect(() => {\n    // if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-streets-v11\",\n      center: [weather.coord.lon, weather.coord.lat],\n      zoom: 11,\n    });\n\n    console.log(map);\n  }, [weather.coord.lat, weather.coord.lon]);\n\n  // useEffect(() => {\n  //   if (!map.current) return;\n  //   map.current.on(\"load\", () => {\n  //     for (const [index, coordinate] of cityCoordinates.entries()) {\n  //       setTimeout(() => {\n  //         map.current.jumpTo({ center: coordinate });\n  //       }, 2000 * index);\n  //     }\n  //   });\n  // });\n\n  // useEffect(() => {\n  //   if (!map.current) return;\n  //   map.current.flyTo({ center: [-3.88, 36.75], zoom: 14 });\n  // });\n\n  const [showElement, setShowElement] = useState(true);\n  useEffect(() => {\n    setTimeout(function () {\n      setShowElement(false);\n    }, 10000);\n  }, []);\n\n  return (\n    <div className=\"center\">\n      {showElement ? (\n        <button\n          className=\"btn\"\n          onClick={() =>\n            map.current.flyTo({\n              center: [19.631, 52.865],\n              zoom: 16,\n              speed: 0.2,\n              curve: 1,\n              // essential: true,\n            })\n          }\n        >\n          Zobacz gdzie jedziemy\n        </button>\n      ) : (\n        <></>\n      )}\n\n      {/* <div className=\"sidebar\">\n        Longitude: {weather.coord.lon} | Latitude: {weather.coord.lat} | Zoom:{\" \"}\n        {zoom}\n      </div> */}\n      <div\n        ref={mapContainer}\n        className=\"map-container\" /*css={mapContainer}*/\n      />\n    </div>\n  );\n};\n\n// const mapContainer = css`\n//   height: 100vh;\n// `;\n"]},"metadata":{},"sourceType":"module"}